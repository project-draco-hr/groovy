{
  int dist=-1;
  if (params.length == args.length) {
    int allPMatch=allParametersAndArgumentsMatch(params,args);
    int firstParamDist=firstParametersAndArgumentsMatch(params,args);
    int lastArgMatch=isVargs(params) && firstParamDist >= 0 ? lastArgMatchesVarg(params,args) : -1;
    if (lastArgMatch >= 0) {
      lastArgMatch+=getVarargsDistance(params);
    }
    dist=allPMatch >= 0 ? Math.max(allPMatch,lastArgMatch) : lastArgMatch;
  }
 else   if (isVargs(params)) {
    dist=firstParametersAndArgumentsMatch(params,args);
    if (dist >= 0) {
      dist+=getVarargsDistance(params);
      if (params.length < args.length) {
        int excessArgumentsDistance=excessArgumentsMatchesVargsParameter(params,args);
        if (excessArgumentsDistance < 0) {
          dist=-1;
        }
 else {
          dist+=excessArgumentsDistance;
        }
      }
    }
  }
  return dist;
}
