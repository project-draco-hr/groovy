{
  if (size == -1) {
    if ((from instanceof Integer || from instanceof Long) && (to instanceof Integer || to instanceof Long)) {
      long fromNum=((Number)from).longValue();
      long toNum=((Number)to).longValue();
      size=(int)(toNum - fromNum + 1);
    }
 else     if (from instanceof Character && to instanceof Character) {
      char fromNum=(Character)from;
      char toNum=(Character)to;
      size=toNum - fromNum + 1;
    }
 else     if (((from instanceof BigDecimal || from instanceof BigInteger) && to instanceof Number) || ((to instanceof BigDecimal || to instanceof BigInteger) && from instanceof Number)) {
      BigDecimal fromNum=new BigDecimal(from.toString());
      BigDecimal toNum=new BigDecimal(to.toString());
      BigInteger sizeNum=toNum.subtract(fromNum).add(new BigDecimal(1.0)).toBigInteger();
      size=sizeNum.intValue();
    }
 else {
      Iterator iter=new StepIterator(this,1);
      int tempsize=0;
      while (iter.hasNext()) {
        tempsize++;
        iter.next();
      }
      size=tempsize;
    }
  }
  return size;
}
