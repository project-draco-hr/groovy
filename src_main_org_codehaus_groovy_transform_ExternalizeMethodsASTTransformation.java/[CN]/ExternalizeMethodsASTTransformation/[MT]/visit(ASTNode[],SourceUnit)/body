{
  init(nodes,source);
  AnnotatedNode parent=(AnnotatedNode)nodes[1];
  AnnotationNode anno=(AnnotationNode)nodes[0];
  if (!MY_TYPE.equals(anno.getClassNode()))   return;
  if (parent instanceof ClassNode) {
    ClassNode cNode=(ClassNode)parent;
    if (!checkNotInterface(cNode,MY_TYPE_NAME))     return;
    cNode.addInterface(EXTERNALIZABLE_TYPE);
    boolean includeFields=memberHasValue(anno,"includeFields",true);
    List<String> excludes=getMemberList(anno,"excludes");
    if (!checkPropertyList(cNode,excludes,"excludes",anno,MY_TYPE_NAME,includeFields))     return;
    List<FieldNode> list=getInstancePropertyFields(cNode);
    if (includeFields) {
      list.addAll(getInstanceNonPropertyFields(cNode));
    }
    createWriteExternal(cNode,excludes,list);
    createReadExternal(cNode,excludes,list);
  }
}
