{
  if (inSpecialConstructorCall && !isInnerClass(currentMethod.getDeclaringClass())) {
    Expression objectExpression=mce.getObjectExpression();
    if (objectExpression instanceof VariableExpression) {
      VariableExpression ve=(VariableExpression)objectExpression;
      if (ve.isThisExpression()) {
        addError("Can't access instance method '" + mce.getMethodAsString() + "' before the class is constructed",mce);
        return;
      }
    }
  }
  super.visitMethodCallExpression(mce);
}
