{
  String name=node.getName();
  FieldNode field=node.getField();
  String getterName="get" + capitalize(name);
  String setterName="set" + capitalize(name);
  int accessorModifiers=PropertyNodeUtils.adjustPropertyModifiersForMethod(node);
  Statement getterBlock=node.getGetterBlock();
  if (getterBlock == null) {
    MethodNode getter=classNode.getGetterMethod(getterName,!node.isStatic());
    if (getter == null && ClassHelper.boolean_TYPE == node.getType()) {
      String secondGetterName="is" + capitalize(name);
      getter=classNode.getGetterMethod(secondGetterName);
    }
    if (!node.isPrivate() && methodNeedsReplacement(getter)) {
      getterBlock=createGetterBlock(node,field);
    }
  }
  Statement setterBlock=node.getSetterBlock();
  if (setterBlock == null) {
    MethodNode setter=classNode.getSetterMethod(setterName,false);
    if (!node.isPrivate() && !isFinal(accessorModifiers) && methodNeedsReplacement(setter)) {
      setterBlock=createSetterBlock(node,field);
    }
  }
  int getterModifiers=accessorModifiers;
  if (node.isStatic()) {
    getterModifiers=~Modifier.FINAL & getterModifiers;
  }
  if (getterBlock != null) {
    MethodNode getter=new MethodNode(getterName,getterModifiers,node.getType(),Parameter.EMPTY_ARRAY,ClassNode.EMPTY_ARRAY,getterBlock);
    getter.setSynthetic(true);
    addPropertyMethod(getter);
    visitMethod(getter);
    if (ClassHelper.boolean_TYPE == node.getType() || ClassHelper.Boolean_TYPE == node.getType()) {
      String secondGetterName="is" + capitalize(name);
      MethodNode secondGetter=new MethodNode(secondGetterName,getterModifiers,node.getType(),Parameter.EMPTY_ARRAY,ClassNode.EMPTY_ARRAY,getterBlock);
      secondGetter.setSynthetic(true);
      addPropertyMethod(secondGetter);
      visitMethod(secondGetter);
    }
  }
  if (setterBlock != null) {
    Parameter[] setterParameterTypes={new Parameter(node.getType(),"value")};
    MethodNode setter=new MethodNode(setterName,accessorModifiers,ClassHelper.VOID_TYPE,setterParameterTypes,ClassNode.EMPTY_ARRAY,setterBlock);
    setter.setSynthetic(true);
    addPropertyMethod(setter);
    visitMethod(setter);
  }
}
