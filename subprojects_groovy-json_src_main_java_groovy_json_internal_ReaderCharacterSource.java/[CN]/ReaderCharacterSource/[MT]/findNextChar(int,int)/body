{
  try {
    ensureBuffer();
    if (readBuf[index] == '"') {
      index++;
      return EMPTY_CHARS;
    }
    int start=index;
    foundEscape=false;
    char[] results=null;
    boolean foundEnd=false;
    boolean wasEscaped=false;
    while (!foundEnd) {
      for (; index < length; index++) {
        ch=readBuf[index];
        if (wasEscaped) {
          wasEscaped=false;
        }
 else         if (ch == match) {
          foundEnd=true;
          break;
        }
 else         if (ch == esc) {
          foundEscape=true;
          wasEscaped=true;
        }
      }
      if (results != null) {
        results=Chr.add(results,ArrayUtils.copyRange(readBuf,start,index));
      }
 else {
        results=ArrayUtils.copyRange(readBuf,start,index);
      }
      ensureBuffer();
      if (index == 0) {
        start=0;
      }
      if (done) {
        break;
      }
    }
    if (done) {
      return Exceptions.die(char[].class,"Unable to find close char " + (char)match + ": "+ new String(results));
    }
 else {
      index++;
      return results;
    }
  }
 catch (  Exception ex) {
    String str=CharScanner.errorDetails("findNextChar issue",readBuf,index,ch);
    return Exceptions.handle(char[].class,str,ex);
  }
}
