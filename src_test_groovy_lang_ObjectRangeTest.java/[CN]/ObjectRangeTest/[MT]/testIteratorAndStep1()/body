{
  Range r=createRange(5,11);
  int i=4;
  for (Iterator it=r.iterator(); it.hasNext(); ) {
    i++;
    assertEquals("equals to " + i,new Integer(i),(Integer)(it.next()));
  }
  assertEquals(11,i);
  i=4;
  for (Iterator it=r.step(1).iterator(); it.hasNext(); ) {
    i++;
    assertEquals("equals to " + i,new Integer(i),(Integer)(it.next()));
  }
  assertEquals(11,i);
  r=createRange(new BigDecimal("5.0"),new BigDecimal("11.0"));
  BigDecimal one=new BigDecimal("1.0");
  BigDecimal val=new BigDecimal("5.0");
  for (Iterator it=r.iterator(); it.hasNext(); ) {
    assertEquals("equals to " + val,val,(BigDecimal)(it.next()));
    val=val.add(one);
  }
  assertEquals(11,i);
  val=new BigDecimal("5.0");
  for (Iterator it=r.step(1).iterator(); it.hasNext(); ) {
    assertEquals("equals to " + val,val,(BigDecimal)(it.next()));
    val=val.add(one);
  }
  assertEquals(11,i);
  r=createRange(new Character('a'),new Character('z'));
  char valChar='a';
  for (Iterator it=r.iterator(); it.hasNext(); ) {
    assertEquals("equals to " + valChar,valChar,((Character)it.next()).charValue());
    if (it.hasNext()) {
      valChar=(char)(((int)valChar) + 1);
    }
  }
  assertEquals('z',valChar);
  valChar='a';
  for (Iterator it=r.step(1).iterator(); it.hasNext(); ) {
    assertEquals("equals to " + valChar,valChar,((Character)it.next()).charValue());
    if (it.hasNext()) {
      valChar=(char)(((int)valChar) + 1);
    }
  }
  assertEquals('z',valChar);
}
