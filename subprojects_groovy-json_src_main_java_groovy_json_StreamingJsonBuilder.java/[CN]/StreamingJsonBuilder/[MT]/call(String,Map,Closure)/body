{
  writer.write(JsonOutput.OPEN_BRACE);
  writer.write(generator.toJson(name));
  writer.write(COLON_WITH_OPEN_BRACE);
  boolean first=true;
  for (  Object it : map.entrySet()) {
    if (!first) {
      writer.write(JsonOutput.COMMA);
    }
 else {
      first=false;
    }
    Map.Entry entry=(Map.Entry)it;
    String key=entry.getKey().toString();
    if (generator.isExcludingFieldsNamed(key)) {
      continue;
    }
    Object value=entry.getValue();
    if (generator.isExcludingValues(value)) {
      return;
    }
    writer.write(generator.toJson(key));
    writer.write(JsonOutput.COLON);
    writer.write(generator.toJson(value));
  }
  StreamingJsonDelegate.cloneDelegateAndGetContent(writer,callable,map.size() == 0,generator);
  writer.write(DOUBLE_CLOSE_BRACKET);
}
