{
  boolean isPrimBool=prop.getOriginType().equals(ClassHelper.boolean_TYPE);
  boolean willHaveGetAccessor=true;
  boolean willHaveIsAccessor=isPrimBool;
  String suffix=Verifier.capitalize(name);
  if (isPrimBool) {
    ClassNode cNode=prop.getDeclaringClass();
    if (cNode.getGetterMethod("is" + suffix) != null && cNode.getGetterMethod("get" + suffix) == null)     willHaveGetAccessor=false;
    if (cNode.getGetterMethod("get" + suffix) != null && cNode.getGetterMethod("is" + suffix) == null)     willHaveIsAccessor=false;
  }
  for (  String prefix : new String[]{"get","is"}) {
    String getterName=prefix + suffix;
    if (delegate.owner.getGetterMethod(getterName) == null && !shouldSkipPropertyMethod(name,getterName,delegate.excludes,delegate.includes,allNames)) {
      if (prefix.equals("get") && willHaveGetAccessor || prefix.equals("is") && willHaveIsAccessor) {
        delegate.owner.addMethod(getterName,ACC_PUBLIC,GenericsUtils.nonGeneric(prop.getType()),Parameter.EMPTY_ARRAY,null,returnS(propX(delegate.getOp,name)));
      }
    }
  }
}
