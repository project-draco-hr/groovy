{
  lock();
  try {
    rehashIfThresholdExceeded();
    Object[] tab=table;
    int index=hash & (tab.length - 1);
    Object o=tab[index];
    if (o != null) {
      if (o instanceof Entry) {
        Entry e=(Entry)o;
        if (e.isEqual(key,hash)) {
          e.setValue(value);
          return e;
        }
 else {
          Object arr[]=new Object[2];
          final Entry ee=createEntry(key,hash,value);
          arr[0]=ee;
          arr[1]=e;
          tab[index]=arr;
          count++;
          return ee;
        }
      }
 else {
        Object arr[]=(Object[])o;
        for (int i=0; i < arr.length; i++) {
          Entry e=(Entry)arr[i];
          if (e != null && e.isEqual(key,hash)) {
            e.setValue(value);
            return e;
          }
        }
        final Entry ee=createEntry(key,hash,value);
        for (int i=0; i < arr.length; i++) {
          Entry e=(Entry)arr[i];
          if (e == null) {
            arr[i]=ee;
            count++;
            return ee;
          }
        }
        Object newArr[]=new Object[arr.length + 1];
        newArr[0]=ee;
        System.arraycopy(arr,0,newArr,1,arr.length);
        tab[index]=newArr;
        count++;
        return ee;
      }
    }
    Entry e=createEntry(key,hash,value);
    tab[index]=e;
    count++;
    return e;
  }
  finally {
    unlock();
  }
}
