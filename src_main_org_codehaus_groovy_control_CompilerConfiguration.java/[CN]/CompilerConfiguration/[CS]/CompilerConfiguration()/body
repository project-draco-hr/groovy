{
  setWarningLevel(WarningMessage.LIKELY_ERRORS);
  setOutput(null);
  setTargetDirectory((File)null);
  setClasspath("");
  setVerbose(false);
  setDebug(false);
  setParameters(safeGetSystemProperty("groovy.parameters") != null);
  setTolerance(10);
  setScriptBaseClass(null);
  setRecompileGroovySource(false);
  setMinimumRecompilationInterval(100);
  setTargetBytecode(safeGetSystemProperty("groovy.target.bytecode",getVMVersion()));
  setDefaultScriptExtension(safeGetSystemProperty("groovy.default.scriptExtension",".groovy"));
  String encoding=safeGetSystemProperty("file.encoding","US-ASCII");
  encoding=safeGetSystemProperty("groovy.source.encoding",encoding);
  setSourceEncoding(encoding);
  try {
    setOutput(new PrintWriter(System.err));
  }
 catch (  Exception e) {
  }
  String target=safeGetSystemProperty("groovy.target.directory");
  if (target != null) {
    setTargetDirectory(target);
  }
  boolean indy=false;
  try {
    indy=Boolean.getBoolean("groovy.target.indy");
  }
 catch (  Exception e) {
  }
  if (DEFAULT != null && Boolean.TRUE.equals(DEFAULT.getOptimizationOptions().get(INVOKEDYNAMIC))) {
    indy=true;
  }
  Map options=new HashMap<String,Boolean>(3);
  if (indy) {
    options.put(INVOKEDYNAMIC,Boolean.TRUE);
  }
  setOptimizationOptions(options);
}
