{
  if (arguments == null) {
    final NullObject nullObject=NullObject.getNullObject();
    return (String)nullObject.getMetaClass().invokeMethod(nullObject,"toString",EMPTY_ARGS);
  }
  if (arguments.getClass().isArray()) {
    if (arguments instanceof char[]) {
      return new String((char[])arguments);
    }
    return format(DefaultTypeTransformation.asCollection(arguments),verbose,maxSize);
  }
  if (arguments instanceof Range) {
    Range range=(Range)arguments;
    if (verbose) {
      return range.inspect();
    }
 else {
      return range.toString();
    }
  }
  if (arguments instanceof Collection) {
    return formatList((Collection)arguments,verbose,maxSize);
  }
  if (arguments instanceof Map) {
    return formatMap((Map)arguments,verbose,maxSize);
  }
  if (arguments instanceof Element) {
    try {
      Method serialize=Class.forName("groovy.xml.XmlUtil").getMethod("serialize",Element.class);
      return (String)serialize.invoke(null,arguments);
    }
 catch (    ClassNotFoundException e) {
      throw new RuntimeException(e);
    }
catch (    NoSuchMethodException e) {
      throw new RuntimeException(e);
    }
catch (    InvocationTargetException e) {
      throw new RuntimeException(e);
    }
catch (    IllegalAccessException e) {
      throw new RuntimeException(e);
    }
  }
  if (arguments instanceof String) {
    if (verbose) {
      String arg=((String)arguments).replace("\\","\\\\").replace("\n","\\n").replaceAll("\\r","\\\\r").replaceAll("\\t","\\\\t").replaceAll("\\f","\\\\f").replaceAll("'","\\\\'");
      return "\'" + arg + "\'";
    }
 else {
      return (String)arguments;
    }
  }
  return arguments.toString();
}
