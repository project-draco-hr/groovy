{
  AST bracket=indexNode.getFirstChild();
  AST leftNode=bracket.getNextSibling();
  Expression leftExpression=expression(leftNode);
  AST rightNode=leftNode.getNextSibling();
  Expression rightExpression=expression(rightNode);
  if (rightExpression instanceof SpreadExpression) {
    ListExpression wrapped=new ListExpression();
    wrapped.addExpression(rightExpression);
    rightExpression=wrapped;
  }
  BinaryExpression binaryExpression=new BinaryExpression(leftExpression,makeToken(Types.LEFT_SQUARE_BRACKET,bracket),rightExpression);
  configureAST(binaryExpression,indexNode);
  return binaryExpression;
}
